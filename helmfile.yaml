repositories:
  - name: kedacore
    url: https://kedacore.github.io/charts
  - name: wavefront
    url: https://wavefronthq.github.io/helm/
  - name: bitnami
    url: https://charts.bitnami.com/bitnami

releases:
  - name: rabbitmq-operator
    chart: bitnami/rabbitmq-cluster-operator

  - name: rabbitmq-cluster
    needs:
      - rabbitmq-operator
    chart: helm/rabbitmq-cluster
    values:
      - config:
          rabbitmq:
            additionalPlugins:
              - rabbitmq_top

  - name: keda
    chart: kedacore/keda

  - name: wavefront
    chart: wavefront/wavefront
    installed: {{ gt (env "WAVEFRONT_TOKEN" | default "" | len) 0 }}
    values:
      - wavefront:
          url: https://longboard.wavefront.com
          token: {{ requiredEnv "WAVEFRONT_TOKEN" }}
        clusterName: streaming-example

  - name: streaming-producer
    chart: helm/streaming-service
    needs:
      - keda
      - rabbitmq-cluster
      - wavefront
    values:
      - values-rmq-secret.yaml.gotmpl
      - image:
          repository: streaming-producer
          tag: 1.0.0
        replicaCount: 1
        appConfig:
          spring:
            application:
              name: streaming-producer
            rabbitmq:
              host: rabbitmq-cluster
          wavefront:
            application:
              name: streaming-example
          management:
            metrics:
              export:
                wavefront:
                  api-token: {{ env "WAVEFRONT_TOKEN" | default "not-set" }}
                  uri: https://longboard.wavefront.com

  - name: streaming-consumer
    chart: helm/streaming-service
    needs:
      - keda
      - rabbitmq-cluster
      - wavefront
    values:
      - values-rmq-secret.yaml.gotmpl
      - image:
          repository: streaming-consumer
          tag: 1.0.0
        appConfig:
          spring:
            application:
              name: streaming-consumer
            rabbitmq:
              host: rabbitmq-cluster
          wavefront:
            application:
              name: streaming-example
          management:
            metrics:
              export:
                wavefront:
                  api-token: {{ env "WAVEFRONT_TOKEN" | default "not-set" }}
                  uri: https://longboard.wavefront.com

  - name: streaming-processor1
    chart: helm/streaming-service
    needs:
      - keda
      - rabbitmq-cluster
      - wavefront
    values:
      - values-rmq-secret.yaml.gotmpl
      - values-scaling.yaml.gotmpl
      - image:
          repository: streaming-processor1
          tag: 1.0.0
        appConfig:
          spring:
            application:
              name: streaming-processor1
            rabbitmq:
              host: rabbitmq-cluster
            cloud:
              stream:
                bindings:
                  peopleProcessor1-in-0:
                    group: processor1
                    destination: peopleProducer-out-0
                  peopleProcessor1-out-0:
                    destination: peopleConsumer-in-0
          wavefront:
            application:
              name: streaming-example
          management:
            metrics:
              export:
                wavefront:
                  api-token: {{ env "WAVEFRONT_TOKEN" | default "not-set" }}
                  uri: https://longboard.wavefront.com
        scaling:
          rabbitMQ:
            enabled: true
            queueName: "peopleProducer-out-0.processor1"

  - name: streaming-processor2
    chart: helm/streaming-service
    needs:
      - keda
      - rabbitmq-cluster
      - wavefront
    values:
      - values-rmq-secret.yaml.gotmpl
      - values-scaling.yaml.gotmpl
      - image:
          repository: streaming-processor2
          tag: 1.0.0
        appConfig:
          spring:
            application:
              name: streaming-processor2
            rabbitmq:
              host: rabbitmq-cluster
            cloud:
              stream:
                bindings:
                  peopleProcessor2-in-0:
                    group: processor2
                    destination: peopleProducer-out-0
                  peopleProcessor2-out-0:
                    destination: peopleConsumer-in-0
          wavefront:
            application:
              name: streaming-example
          management:
            metrics:
              export:
                wavefront:
                  api-token: {{ env "WAVEFRONT_TOKEN" | default "not-set" }}
                  uri: https://longboard.wavefront.com
        scaling:
          rabbitMQ:
            enabled: true
            queueName: "peopleProducer-out-0.processor2"
